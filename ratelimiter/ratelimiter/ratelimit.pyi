from _typeshed import Incomplete
from types import TracebackType
from typing import Optional, Type, Union

logger: Incomplete

class RateLimiter:
    def __init__(self, calls: int, period: Union[int, float]) -> None: ...
    def finalize(self) -> None: ...
    def __enter__(self) -> RateLimiter: ...
    def __exit__(self, type: Optional[Type[BaseException]], value: Optional[BaseException], traceback: Optional[TracebackType]) -> bool: ...
    def limit(self) -> None: ...
